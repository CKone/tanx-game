name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (optional when run manually)'
        required: false

jobs:
  build-desktop:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then python -m pip install -r requirements-dev.txt; fi
          python -m pip install pygame==2.6.1 pyinstaller

      - name: Run smoke tests
        run: |
          PYTHONPATH=.:$PYTHONPATH python -m pytest --maxfail=1 --disable-warnings -m smoke

      - name: Build desktop bundle
        run: |
          python -m PyInstaller tanx.spec
          tar -czf tanx-linux.tar.gz -C dist tanx

      - name: Upload desktop artifact
        uses: actions/upload-artifact@v4
        with:
          name: tanx-desktop
          path: tanx-linux.tar.gz

  build-web:
    runs-on: ubuntu-latest
    needs: build-desktop
    if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pygbag
        run: |
          python -m pip install --upgrade pip
          python -m pip install pygbag pygame==2.6.1

      - name: Build web bundle
        run: |
          python -m pygbag --build main.py --bundle --outdir build/web
          cd build
          zip -r ../tanx-web.zip web

      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: tanx-web
          path: tanx-web.zip

  publish:
    runs-on: ubuntu-latest
    needs:
      - build-desktop
      - build-web
    if: github.ref_type == 'tag'
    steps:
      - name: Download desktop artifact
        uses: actions/download-artifact@v4
        with:
          name: tanx-desktop
          path: artifacts

      - name: Download web artifact
        uses: actions/download-artifact@v4
        with:
          name: tanx-web
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/tanx-linux.tar.gz
            artifacts/tanx-web.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
